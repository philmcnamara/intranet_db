# Generated by Django 2.2.9 on 2020-01-30 09:32

import collection_management.models
from django.db import migrations, models
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Antibody',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('species_isotype', models.CharField(max_length=255, verbose_name='species/isotype')),
                ('clone', models.CharField(blank=True, max_length=255, verbose_name='clone')),
                ('received_from', models.CharField(blank=True, max_length=255, verbose_name='receieved from')),
                ('catalogue_number', models.CharField(blank=True, max_length=255, verbose_name='catalogue number')),
                ('l_ocation', models.CharField(blank=True, max_length=255, verbose_name='location')),
                ('a_pplication', models.CharField(blank=True, max_length=255, verbose_name='application')),
                ('description_comment', models.TextField(blank=True, verbose_name='description/comments')),
                ('info_sheet', models.FileField(blank=True, help_text='only .pdf files, max. 2 MB', null=True, upload_to='collection_management/antibody/', verbose_name='info sheet')),
                ('created_date_time', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('last_changed_date_time', models.DateTimeField(auto_now=True, verbose_name='last changed')),
            ],
            options={
                'verbose_name': 'antibody',
                'verbose_name_plural': 'antibodies',
            },
            bases=(models.Model, collection_management.models.SaveWithoutHistoricalRecord),
        ),
        migrations.CreateModel(
            name='CellLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('box_name', models.CharField(max_length=255, verbose_name='box')),
                ('alternative_name', models.CharField(blank=True, max_length=255, verbose_name='alternative name')),
                ('parental_line_old', models.CharField(max_length=255, verbose_name='parental cell line')),
                ('cell_type_tissue', models.CharField(blank=True, max_length=255, verbose_name='cell type/tissue')),
                ('culture_type', models.CharField(blank=True, max_length=255, verbose_name='culture type')),
                ('growth_condition', models.CharField(blank=True, max_length=255, verbose_name='growth conditions')),
                ('freezing_medium', models.CharField(blank=True, max_length=255, verbose_name='freezing medium')),
                ('received_from', models.CharField(blank=True, max_length=255, verbose_name='received from')),
                ('description_comment', models.TextField(blank=True, verbose_name='description/comments')),
                ('s2_work', models.BooleanField(default=False, help_text='Check, for example, for a cell line created by lentiviral trunsdunction', verbose_name='Used for S2 work?')),
                ('created_date_time', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(auto_now=True, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
                ('formz_risk_group', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2)], null=True, verbose_name='risk group')),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
                ('history_integrated_plasmids', models.TextField(blank=True, verbose_name='integrated plasmid')),
                ('history_episomal_plasmids', models.TextField(blank=True, verbose_name='episomal plasmids')),
                ('history_formz_projects', models.TextField(blank=True, verbose_name='formZ projects')),
                ('history_formz_gentech_methods', models.TextField(blank=True, verbose_name='genTech methods')),
                ('history_formz_elements', models.TextField(blank=True, verbose_name='formz elements')),
                ('history_documents', models.TextField(blank=True, verbose_name='documents')),
            ],
            options={
                'verbose_name': 'cell line',
                'verbose_name_plural': 'cell lines',
            },
            bases=(models.Model, collection_management.models.SaveWithoutHistoricalRecord),
        ),
        migrations.CreateModel(
            name='CellLineDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.FileField(help_text='max. 2 MB', null=True, upload_to='temp/', verbose_name='file name')),
                ('typ_e', models.CharField(choices=[('virus', 'Virus test'), ('mycoplasma', 'Mycoplasma test'), ('fingerprint', 'Fingerprinting'), ('other', 'Other')], max_length=255, verbose_name='doc type')),
                ('date_of_test', models.DateField(null=True, verbose_name='date of test')),
                ('comment', models.CharField(blank=True, max_length=150, verbose_name='comment')),
                ('created_date_time', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('last_changed_date_time', models.DateTimeField(auto_now=True, verbose_name='last Changed')),
            ],
            options={
                'verbose_name': 'cell line document',
            },
        ),
        migrations.CreateModel(
            name='CellLineEpisomalPlasmid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s2_work_episomal_plasmid', models.BooleanField(default=False, help_text='Check, for example, for lentiviral packaging plasmids', verbose_name='Used for S2 work?')),
                ('created_date', models.DateField(null=True, verbose_name='created')),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
            ],
        ),
        migrations.CreateModel(
            name='EColiStrain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('resistance', models.CharField(blank=True, max_length=255, verbose_name='resistance')),
                ('genotype', models.TextField(blank=True, verbose_name='genotype')),
                ('background', models.CharField(blank=True, choices=[('B', 'B'), ('C', 'C'), ('K12', 'K12'), ('W', 'W')], max_length=255, verbose_name='background')),
                ('formz_risk_group', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2)], null=True, verbose_name='risk group')),
                ('supplier', models.CharField(max_length=255, verbose_name='supplier')),
                ('us_e', models.CharField(choices=[('Cloning', 'Cloning'), ('Expression', 'Expression'), ('Other', 'Other')], max_length=255, verbose_name='use')),
                ('purpose', models.TextField(blank=True, verbose_name='purpose')),
                ('note', models.TextField(blank=True, max_length=255, verbose_name='note')),
                ('created_date_time', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(auto_now=True, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
                ('history_formz_projects', models.TextField(blank=True, verbose_name='formZ projects')),
                ('history_formz_gentech_methods', models.TextField(blank=True, verbose_name='genTech methods')),
                ('history_formz_elements', models.TextField(blank=True, verbose_name='formz elements')),
            ],
            options={
                'verbose_name': 'strain - E. coli',
                'verbose_name_plural': 'strains - E. coli',
            },
            bases=(models.Model, collection_management.models.SaveWithoutHistoricalRecord),
        ),
        migrations.CreateModel(
            name='HistoricalAntibody',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('species_isotype', models.CharField(max_length=255, verbose_name='species/isotype')),
                ('clone', models.CharField(blank=True, max_length=255, verbose_name='clone')),
                ('received_from', models.CharField(blank=True, max_length=255, verbose_name='receieved from')),
                ('catalogue_number', models.CharField(blank=True, max_length=255, verbose_name='catalogue number')),
                ('l_ocation', models.CharField(blank=True, max_length=255, verbose_name='location')),
                ('a_pplication', models.CharField(blank=True, max_length=255, verbose_name='application')),
                ('description_comment', models.TextField(blank=True, verbose_name='description/comments')),
                ('info_sheet', models.TextField(blank=True, help_text='only .pdf files, max. 2 MB', max_length=100, null=True, verbose_name='info sheet')),
                ('created_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='created')),
                ('last_changed_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='last changed')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical antibody',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCellLine',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='name')),
                ('box_name', models.CharField(max_length=255, verbose_name='box')),
                ('alternative_name', models.CharField(blank=True, max_length=255, verbose_name='alternative name')),
                ('parental_line_old', models.CharField(max_length=255, verbose_name='parental cell line')),
                ('cell_type_tissue', models.CharField(blank=True, max_length=255, verbose_name='cell type/tissue')),
                ('culture_type', models.CharField(blank=True, max_length=255, verbose_name='culture type')),
                ('growth_condition', models.CharField(blank=True, max_length=255, verbose_name='growth conditions')),
                ('freezing_medium', models.CharField(blank=True, max_length=255, verbose_name='freezing medium')),
                ('received_from', models.CharField(blank=True, max_length=255, verbose_name='received from')),
                ('description_comment', models.TextField(blank=True, verbose_name='description/comments')),
                ('s2_work', models.BooleanField(default=False, help_text='Check, for example, for a cell line created by lentiviral trunsdunction', verbose_name='Used for S2 work?')),
                ('created_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
                ('formz_risk_group', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2)], null=True, verbose_name='risk group')),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
                ('history_integrated_plasmids', models.TextField(blank=True, verbose_name='integrated plasmid')),
                ('history_episomal_plasmids', models.TextField(blank=True, verbose_name='episomal plasmids')),
                ('history_formz_projects', models.TextField(blank=True, verbose_name='formZ projects')),
                ('history_formz_gentech_methods', models.TextField(blank=True, verbose_name='genTech methods')),
                ('history_formz_elements', models.TextField(blank=True, verbose_name='formz elements')),
                ('history_documents', models.TextField(blank=True, verbose_name='documents')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical cell line',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEColiStrain',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('resistance', models.CharField(blank=True, max_length=255, verbose_name='resistance')),
                ('genotype', models.TextField(blank=True, verbose_name='genotype')),
                ('background', models.CharField(blank=True, choices=[('B', 'B'), ('C', 'C'), ('K12', 'K12'), ('W', 'W')], max_length=255, verbose_name='background')),
                ('formz_risk_group', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2)], null=True, verbose_name='risk group')),
                ('supplier', models.CharField(max_length=255, verbose_name='supplier')),
                ('us_e', models.CharField(choices=[('Cloning', 'Cloning'), ('Expression', 'Expression'), ('Other', 'Other')], max_length=255, verbose_name='use')),
                ('purpose', models.TextField(blank=True, verbose_name='purpose')),
                ('note', models.TextField(blank=True, max_length=255, verbose_name='note')),
                ('created_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
                ('history_formz_projects', models.TextField(blank=True, verbose_name='formZ projects')),
                ('history_formz_gentech_methods', models.TextField(blank=True, verbose_name='genTech methods')),
                ('history_formz_elements', models.TextField(blank=True, verbose_name='formz elements')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical strain - E. coli',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOligo',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='name')),
                ('sequence', models.CharField(db_index=True, max_length=255, verbose_name='sequence')),
                ('length', models.SmallIntegerField(null=True, verbose_name='length')),
                ('us_e', models.CharField(blank=True, max_length=255, verbose_name='use')),
                ('gene', models.CharField(blank=True, max_length=255, verbose_name='gene')),
                ('restriction_site', models.CharField(blank=True, max_length=255, verbose_name='restriction sites')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('comment', models.CharField(blank=True, max_length=255, verbose_name='comments')),
                ('created_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical oligo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPlasmid',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='name')),
                ('other_name', models.CharField(blank=True, max_length=255, verbose_name='other name')),
                ('old_parent_vector', models.CharField(blank=True, help_text='Use only when strictly necessary', max_length=255, verbose_name='orig. parent vector field')),
                ('selection', models.CharField(max_length=50, verbose_name='selection')),
                ('us_e', models.CharField(blank=True, max_length=255, verbose_name='use')),
                ('construction_feature', models.TextField(blank=True, verbose_name='construction/features')),
                ('received_from', models.CharField(blank=True, max_length=255, verbose_name='received from')),
                ('note', models.CharField(blank=True, max_length=300, verbose_name='note')),
                ('reference', models.CharField(blank=True, max_length=255, verbose_name='reference')),
                ('map', models.TextField(blank=True, help_text='only SnapGene .dna files, max. 2 MB', max_length=100, verbose_name='plasmid map (.dna)')),
                ('map_png', models.TextField(blank=True, max_length=100, verbose_name='plasmid image')),
                ('map_gbk', models.TextField(blank=True, help_text='only .gbk or .gb files, max. 2 MB', max_length=100, verbose_name='plasmid map (.gbk)')),
                ('created_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
                ('formz_risk_group', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2)], null=True, verbose_name='risk group')),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
                ('history_formz_projects', models.TextField(blank=True, verbose_name='formZ projects')),
                ('history_formz_elements', models.TextField(blank=True, verbose_name='formZ elements')),
                ('history_formz_gentech_methods', models.TextField(blank=True, verbose_name='genTech methods')),
                ('history_formz_ecoli_strains', models.TextField(blank=True, verbose_name='e. coli strains')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical plasmid',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSaCerevisiaeStrain',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('relevant_genotype', models.CharField(max_length=255, verbose_name='relevant genotype')),
                ('mating_type', models.CharField(blank=True, choices=[('a', 'a'), ('alpha', 'alpha'), ('unknown', 'unknown'), ('a/a', 'a/a'), ('alpha/alpha', 'alpha/alpha'), ('a/alpha', 'a/alpha'), ('other', 'other')], max_length=20, verbose_name='mating type')),
                ('chromosomal_genotype', models.TextField(blank=True, verbose_name='chromosomal genotype')),
                ('parental_strain', models.CharField(blank=True, help_text="Use only when 'Parent 1' does not apply", max_length=255, verbose_name='parental strain')),
                ('construction', models.TextField(blank=True, verbose_name='construction')),
                ('modification', models.CharField(blank=True, max_length=255, verbose_name='modification')),
                ('plasmids', models.CharField(blank=True, help_text='Use only when the other plasmid fields do not apply', max_length=255, verbose_name='plasmids')),
                ('selection', models.CharField(blank=True, max_length=255, verbose_name='selection')),
                ('phenotype', models.CharField(blank=True, max_length=255, verbose_name='phenotype')),
                ('background', models.CharField(blank=True, max_length=255, verbose_name='background')),
                ('received_from', models.CharField(blank=True, max_length=255, verbose_name='received from')),
                ('us_e', models.CharField(blank=True, max_length=255, verbose_name='use')),
                ('note', models.CharField(blank=True, max_length=255, verbose_name='note')),
                ('reference', models.CharField(blank=True, max_length=255, verbose_name='reference')),
                ('created_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
                ('formz_risk_group', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2)], null=True, verbose_name='risk group')),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
                ('history_integrated_plasmids', models.TextField(blank=True, verbose_name='integrated plasmid')),
                ('history_cassette_plasmids', models.TextField(blank=True, verbose_name='cassette plasmids')),
                ('history_episomal_plasmids', models.TextField(blank=True, verbose_name='episomal plasmids')),
                ('history_all_plasmids_in_stocked_strain', models.TextField(blank=True, verbose_name='all plasmids in stocked strain')),
                ('history_formz_projects', models.TextField(blank=True, verbose_name='formZ projects')),
                ('history_formz_gentech_methods', models.TextField(blank=True, verbose_name='genTech methods')),
                ('history_formz_elements', models.TextField(blank=True, verbose_name='formz elements')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical strain - Sa. cerevisiae',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScPombeStrain',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('box_number', models.SmallIntegerField(verbose_name='box number')),
                ('parental_strain', models.CharField(blank=True, max_length=255, verbose_name='parental strains')),
                ('mating_type', models.CharField(blank=True, max_length=20, verbose_name='mating type')),
                ('auxotrophic_marker', models.CharField(blank=True, max_length=255, verbose_name='auxotrophic markers')),
                ('name', models.TextField(verbose_name='genotype')),
                ('phenotype', models.CharField(blank=True, max_length=255, verbose_name='phenotype')),
                ('received_from', models.CharField(blank=True, max_length=255, verbose_name='received from')),
                ('comment', models.CharField(blank=True, max_length=300, verbose_name='comments')),
                ('created_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(blank=True, editable=False, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
                ('formz_risk_group', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2)], null=True, verbose_name='risk group')),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
                ('history_integrated_plasmids', models.TextField(blank=True, verbose_name='integrated plasmid')),
                ('history_cassette_plasmids', models.TextField(blank=True, verbose_name='cassette plasmids')),
                ('history_episomal_plasmids', models.TextField(blank=True, verbose_name='episomal plasmids')),
                ('history_all_plasmids_in_stocked_strain', models.TextField(blank=True, verbose_name='all plasmids in stocked strain')),
                ('history_formz_projects', models.TextField(blank=True, verbose_name='formZ projects')),
                ('history_formz_gentech_methods', models.TextField(blank=True, verbose_name='genTech methods')),
                ('history_formz_elements', models.TextField(blank=True, verbose_name='formz elements')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical strain - Sc. pombe',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Oligo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('sequence', models.CharField(max_length=255, unique=True, verbose_name='sequence')),
                ('length', models.SmallIntegerField(null=True, verbose_name='length')),
                ('us_e', models.CharField(blank=True, max_length=255, verbose_name='use')),
                ('gene', models.CharField(blank=True, max_length=255, verbose_name='gene')),
                ('restriction_site', models.CharField(blank=True, max_length=255, verbose_name='restriction sites')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('comment', models.CharField(blank=True, max_length=255, verbose_name='comments')),
                ('created_date_time', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(auto_now=True, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
            ],
            bases=(models.Model, collection_management.models.SaveWithoutHistoricalRecord),
        ),
        migrations.CreateModel(
            name='Plasmid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('other_name', models.CharField(blank=True, max_length=255, verbose_name='other name')),
                ('old_parent_vector', models.CharField(blank=True, help_text='Use only when strictly necessary', max_length=255, verbose_name='orig. parent vector field')),
                ('selection', models.CharField(max_length=50, verbose_name='selection')),
                ('us_e', models.CharField(blank=True, max_length=255, verbose_name='use')),
                ('construction_feature', models.TextField(blank=True, verbose_name='construction/features')),
                ('received_from', models.CharField(blank=True, max_length=255, verbose_name='received from')),
                ('note', models.CharField(blank=True, max_length=300, verbose_name='note')),
                ('reference', models.CharField(blank=True, max_length=255, verbose_name='reference')),
                ('map', models.FileField(blank=True, help_text='only SnapGene .dna files, max. 2 MB', upload_to='collection_management/plasmid/dna/', verbose_name='plasmid map (.dna)')),
                ('map_png', models.ImageField(blank=True, upload_to='collection_management/plasmid/png/', verbose_name='plasmid image')),
                ('map_gbk', models.FileField(blank=True, help_text='only .gbk or .gb files, max. 2 MB', upload_to='collection_management/plasmid/gbk/', verbose_name='plasmid map (.gbk)')),
                ('created_date_time', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(auto_now=True, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
                ('formz_risk_group', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2)], null=True, verbose_name='risk group')),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
                ('history_formz_projects', models.TextField(blank=True, verbose_name='formZ projects')),
                ('history_formz_elements', models.TextField(blank=True, verbose_name='formZ elements')),
                ('history_formz_gentech_methods', models.TextField(blank=True, verbose_name='genTech methods')),
                ('history_formz_ecoli_strains', models.TextField(blank=True, verbose_name='e. coli strains')),
            ],
            options={
                'verbose_name': 'plasmid',
                'verbose_name_plural': 'plasmids',
            },
            bases=(models.Model, collection_management.models.SaveWithoutHistoricalRecord),
        ),
        migrations.CreateModel(
            name='SaCerevisiaeStrain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('relevant_genotype', models.CharField(max_length=255, verbose_name='relevant genotype')),
                ('mating_type', models.CharField(blank=True, choices=[('a', 'a'), ('alpha', 'alpha'), ('unknown', 'unknown'), ('a/a', 'a/a'), ('alpha/alpha', 'alpha/alpha'), ('a/alpha', 'a/alpha'), ('other', 'other')], max_length=20, verbose_name='mating type')),
                ('chromosomal_genotype', models.TextField(blank=True, verbose_name='chromosomal genotype')),
                ('parental_strain', models.CharField(blank=True, help_text="Use only when 'Parent 1' does not apply", max_length=255, verbose_name='parental strain')),
                ('construction', models.TextField(blank=True, verbose_name='construction')),
                ('modification', models.CharField(blank=True, max_length=255, verbose_name='modification')),
                ('plasmids', models.CharField(blank=True, help_text='Use only when the other plasmid fields do not apply', max_length=255, verbose_name='plasmids')),
                ('selection', models.CharField(blank=True, max_length=255, verbose_name='selection')),
                ('phenotype', models.CharField(blank=True, max_length=255, verbose_name='phenotype')),
                ('background', models.CharField(blank=True, max_length=255, verbose_name='background')),
                ('received_from', models.CharField(blank=True, max_length=255, verbose_name='received from')),
                ('us_e', models.CharField(blank=True, max_length=255, verbose_name='use')),
                ('note', models.CharField(blank=True, max_length=255, verbose_name='note')),
                ('reference', models.CharField(blank=True, max_length=255, verbose_name='reference')),
                ('created_date_time', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(auto_now=True, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
                ('formz_risk_group', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2)], null=True, verbose_name='risk group')),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
                ('history_integrated_plasmids', models.TextField(blank=True, verbose_name='integrated plasmid')),
                ('history_cassette_plasmids', models.TextField(blank=True, verbose_name='cassette plasmids')),
                ('history_episomal_plasmids', models.TextField(blank=True, verbose_name='episomal plasmids')),
                ('history_all_plasmids_in_stocked_strain', models.TextField(blank=True, verbose_name='all plasmids in stocked strain')),
                ('history_formz_projects', models.TextField(blank=True, verbose_name='formZ projects')),
                ('history_formz_gentech_methods', models.TextField(blank=True, verbose_name='genTech methods')),
                ('history_formz_elements', models.TextField(blank=True, verbose_name='formz elements')),
            ],
            options={
                'verbose_name': 'strain - Sa. cerevisiae',
                'verbose_name_plural': 'strains - Sa. cerevisiae',
            },
            bases=(models.Model, collection_management.models.SaveWithoutHistoricalRecord),
        ),
        migrations.CreateModel(
            name='SaCerevisiaeStrainEpisomalPlasmid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('present_in_stocked_strain', models.BooleanField(default=False, help_text='Check, if the culture you stocked for the -80° C collection contains an episomal plasmid. Leave unchecked, if you simply want to record that you have transiently transformed this strain with an episomal plasmid', verbose_name='present in -80° C stock?')),
                ('created_date', models.DateField(blank=True, null=True, verbose_name='created')),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
            ],
        ),
        migrations.CreateModel(
            name='ScPombeStrain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('box_number', models.SmallIntegerField(verbose_name='box number')),
                ('parental_strain', models.CharField(blank=True, max_length=255, verbose_name='parental strains')),
                ('mating_type', models.CharField(blank=True, max_length=20, verbose_name='mating type')),
                ('auxotrophic_marker', models.CharField(blank=True, max_length=255, verbose_name='auxotrophic markers')),
                ('name', models.TextField(verbose_name='genotype')),
                ('phenotype', models.CharField(blank=True, max_length=255, verbose_name='phenotype')),
                ('received_from', models.CharField(blank=True, max_length=255, verbose_name='received from')),
                ('comment', models.CharField(blank=True, max_length=300, verbose_name='comments')),
                ('created_date_time', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('created_approval_by_pi', models.BooleanField(default=False, verbose_name='record creation approval')),
                ('last_changed_date_time', models.DateTimeField(auto_now=True, verbose_name='last changed')),
                ('last_changed_approval_by_pi', models.NullBooleanField(default=None, verbose_name='record change approval')),
                ('approval_by_pi_date_time', models.DateTimeField(default=None, null=True)),
                ('formz_risk_group', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2)], null=True, verbose_name='risk group')),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
                ('history_integrated_plasmids', models.TextField(blank=True, verbose_name='integrated plasmid')),
                ('history_cassette_plasmids', models.TextField(blank=True, verbose_name='cassette plasmids')),
                ('history_episomal_plasmids', models.TextField(blank=True, verbose_name='episomal plasmids')),
                ('history_all_plasmids_in_stocked_strain', models.TextField(blank=True, verbose_name='all plasmids in stocked strain')),
                ('history_formz_projects', models.TextField(blank=True, verbose_name='formZ projects')),
                ('history_formz_gentech_methods', models.TextField(blank=True, verbose_name='genTech methods')),
                ('history_formz_elements', models.TextField(blank=True, verbose_name='formz elements')),
            ],
            options={
                'verbose_name': 'strain - Sc. pombe',
                'verbose_name_plural': 'strains - Sc. pombe',
            },
            bases=(models.Model, collection_management.models.SaveWithoutHistoricalRecord),
        ),
        migrations.CreateModel(
            name='ScPombeStrainEpisomalPlasmid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('present_in_stocked_strain', models.BooleanField(default=False, verbose_name='present in -80° C stock?')),
                ('created_date', models.DateField(blank=True, null=True, verbose_name='created')),
                ('destroyed_date', models.DateField(blank=True, null=True, verbose_name='destroyed')),
            ],
        ),
    ]
